// --------------------------------------------------------------------
// Boot - boot.esl
// --------------------------------------------------------------------

package org.contrail.boot;

def _TYPE_ = object {
    string = "java.lang.String";
}

def Mount = fun p -> object {
    mount  = fun i n -> extern p n i;
    mount0 = this.mount 0;
    mount1 = this.mount 1;
    mount2 = this.mount 2;
}

// --------------------------------------------------------------------
// Core - core.esl
// --------------------------------------------------------------------

package org.contrail.core;

import org.contrail.boot;

def PACK = "org.wolfgang.contrail.Core";

def XDucers = Mount PACK with object {
    coerce  = this.mount1 "coerce";
    payload = this.mount0 "payload";
    object  = this.mount0 "object";
};

def Network = Mount PACK with object {
    client = this.mount1 "client";
    server = this.mount2 "server";
}

// --------------------------------------------------------------------
// Example - example.esl
// -------------------------------------------------------------------

import org.contrail.core;

def MainFlow = fun terminal ->
    XDucers.payload () <> XDucers.object () <> XDucers.coerce _TYPE_.string <> terminal;

def Main = fun uri terminal ->
    Network.client uri <> MainFlow terminal;




