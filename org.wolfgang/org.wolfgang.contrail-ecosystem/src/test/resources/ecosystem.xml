<?xml version='1.0'?>
<ecosystem>
	<let name='component'>org.wolfgang.contrail.component</let>
	<let name='pipeline'>$(component).pipeline</let>

	<pipeline name='PayLoad'
		factory='$(pipeline).transducer.payload.PayLoadTransducerFactory' />
	<pipeline name='Serialize'
		factory='$(pipeline).transducer.serializer.SerializerTransducerFactory' />
	<pipeline name='Coercion'
		factory='$(pipeline).transducer.coercion.CoercionTransducerFactory'>
		<param> org.wolfgang.contrail.network.event.NetEvent </param>
	</pipeline>
	<pipeline name='JAXB'
		factory='$(pipeline).transducer.json.JAXBTransducerFactory'>
		<param> org.wolfgang.contrail.network.event.NetEvent </param>
	</pipeline>
	<pipeline name='ClientConnector'
		factory='$(component).network.NetworkAcceptanceComponent' />
	<pipeline name='ConcurrentSource'
		factory='$(pipeline).concurrent.ConcurrentSourcePipelineComponent' />
	<pipeline name='ConcurrentDestination'
		factory='$(pipeline).concurrent.ConcurrentDestinationPipelineComponent' />

	<flow name='Parallel'> ConcurrentSource ConcurrentDestination </flow>
	<flow name='NetEvent'> Parallel Coercion ClientConnector NS </flow>
	<flow name='TCPEvent'> PayLoad Serialize Event </flow>
	<flow name='WebEvent'> JAXB Event </flow>

	<terminal name='Logger' factory='org.wolfgang.contrail.bound.LoggerComponent' />

	<router name='NetStation' factory='$(component).network.NetworkComponent'>
		<self name='A.A' />

		<!-- Net Socket Client -->
		<client name='A.B' filter='A.*' endpoint='tcp://localhost:6666'>
			TCPEvent
		</client>
		
		<!-- Web Socket Client -->
		<client name='A.C' filter='A.*' endpoint='ws://localhost:6668'>
			WebEvent
		</client>
	</router>

	<binder name='NetHook' typein="byte[]" typeout="byte[]">
		TCPEvent
	</binder>
	<binder name='WebHook' typein="String" typeout="String">
		WebEvent
	</binder>

	<server endpoint='tcp://localhost:6667'> TCPEvent </server>
	<server endpoint='ws://localhost:6667'> WebEvent </server>

	<main> NS=NetStation Logger </main>
</ecosystem>
